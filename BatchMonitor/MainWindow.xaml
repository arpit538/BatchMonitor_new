<Window x:Class="BatchMonitor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:viewmodels="clr-namespace:BatchMonitor.ViewModels"
        xmlns:local="clr-namespace:BatchMonitor.Converters"
        Title="Batch Monitor Dashboard" Height="720" Width="1200"
        MinHeight="600" MinWidth="1000"
        WindowStartupLocation="CenterScreen"
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        FontFamily="{DynamicResource MaterialDesignFont}"
        WindowStyle="SingleBorderWindow"
        ResizeMode="CanResize">

    <Window.DataContext>
        <viewmodels:MainViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>

        <!-- Puts a 2‑px red rectangle around the control when it receives keyboard focus -->
        <Style x:Key="RedFocusVisualStyle" TargetType="Control">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <!-- match MDIX halo: 1‑px inset + 1‑px outer = total 2‑px -->
                        <Rectangle Stroke="Red"
                     StrokeThickness="2"
                     SnapsToDevicePixels="True"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Cancel button style: keeps its border red in every visual state -->
        <Style x:Key="CancelRaisedButton"
 TargetType="Button"
 BasedOn="{StaticResource MaterialDesignRaisedButton}">
            <!-- normal appearance -->
            <Setter Property="Background"       Value="Red"/>
            <Setter Property="Foreground"       Value="White"/>
            <Setter Property="BorderBrush"      Value="Red"/>
            <Setter Property="BorderThickness"  Value="1"/>

            <!-- override MDIX triggers that normally flip the border to the accent colour -->
            <Style.Triggers>
                <!-- mouse over -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="Red"/>
                </Trigger>

                <!-- keyboard focus (inside the button, outer halo is already handled) -->
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="BorderBrush" Value="Red"/>
                </Trigger>

                <!-- pressed / holding the mouse -->
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="BorderBrush" Value="Red"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Desktop Card Style -->
        <Style x:Key="DesktopCardStyle" TargetType="materialDesign:Card">
            <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth1"/>
            <Setter Property="materialDesign:ShadowAssist.ShadowEdges" Value="All"/>
            <Setter Property="Background" Value="{DynamicResource MaterialDesignCardBackground}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="8"/>
        </Style>

        <!-- Compact Button Style -->
        <Style x:Key="CompactActionButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
            <Setter Property="Height" Value="28"/>
            <Setter Property="MinWidth" Value="70"/>
            <Setter Property="Margin" Value="3,0"/>
            <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="4"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Padding" Value="8,4"/>
        </Style>
       
        <Style x:Key="CompactActionButton1" TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
            <Setter Property="Height" Value="28"/>
            <Setter Property="MinWidth" Value="70"/>
            <Setter Property="Margin" Value="3,0"/>
            <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="4"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Background"       Value="Red"/>
            <Setter Property="Foreground"       Value="White"/>
            <Setter Property="BorderBrush"      Value="Red"/>
            <Setter Property="BorderThickness"  Value="1"/>

            <!-- override MDIX triggers that normally flip the border to the accent colour -->
            <Style.Triggers>
                <!-- mouse over -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="Red"/>
                </Trigger>

                <!-- keyboard focus (inside the button, outer halo is already handled) -->
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="BorderBrush" Value="Red"/>
                </Trigger>

                <!-- pressed / holding the mouse -->
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="BorderBrush" Value="Red"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Header Button Style -->
        <Style x:Key="HeaderButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
            <Setter Property="Height" Value="32"/>
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="Margin" Value="4,0"/>
            <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="4"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Medium"/>
        </Style>

        <!-- Status Badge Style -->
        <Style x:Key="StatusBadge" TargetType="Border">
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <!-- Logs Button Style -->
        <Style x:Key="LogsButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignOutlinedButton}">
            <Setter Property="Height" Value="28"/>
            <Setter Property="Width" Value="60"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="4"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}"/>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Header Section -->
        <materialDesign:Card Grid.Row="0" Style="{StaticResource DesktopCardStyle}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Title Section -->
                <StackPanel Grid.Column="0" Margin="20,16">
                    <TextBlock Text="Batch Monitor Dashboard" 
                               Style="{DynamicResource MaterialDesignHeadline5TextBlock}"
                               FontWeight="SemiBold"
                               Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                    <TextBlock Text="Monitor and manage batch processes" 
                               Style="{DynamicResource MaterialDesignBody2TextBlock}" 
                               Opacity="0.7"
                               Margin="0,2,0,0"/>
                </StackPanel>

                <!-- Control Panel -->
                <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="20,16" VerticalAlignment="Center">
                    <Button Style="{StaticResource HeaderButton}" 
                            Command="{Binding AddBatchCommand}"
                            Background="{DynamicResource PrimaryHueMidBrush}"
                            Foreground="White"
                            Margin="0,0,8,0">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Plus" Width="14" Height="14" VerticalAlignment="Center" Margin="0,0,6,0"/>
                            <TextBlock Text="Add Batch"/>
                        </StackPanel>
                    </Button>

                    <!-- New: Date Filter Button -->
                    <Button Style="{StaticResource HeaderButton}"
                            Command="{Binding SetFilterDateCommand}"
                            Background="{DynamicResource PrimaryHueMidBrush}"
                            Foreground="White"
                            Margin="0,0,8,0"
                            ToolTip="Set Date Filter">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Calendar" Width="16" Height="16" VerticalAlignment="Center" Margin="0,0,6,0"/>
                            <TextBlock Text="Set Filter Date" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Button>

                    <Button 
    Command="{Binding RefreshCommand}"
    Background="Red"
    Style="{StaticResource CancelRaisedButton}"
    FocusVisualStyle="{StaticResource RedFocusVisualStyle}"
    Foreground="White"
    Margin="0,0,12,0">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Refresh" Width="14" Height="14" VerticalAlignment="Center" Margin="0,0,6,0"/>
                            <TextBlock Text="Refresh"/>
                        </StackPanel>
                    </Button>


                    <!-- Auto-refresh Controls -->
                    <Border Background="{DynamicResource MaterialDesignChipBackground}" 
                            CornerRadius="4" 
                            Padding="12,8">
                        <StackPanel Orientation="Horizontal">
                            <ToggleButton Style="{DynamicResource MaterialDesignSwitchToggleButton}" 
                                          IsChecked="{Binding AutoRefreshEnabled}" 
                                          VerticalAlignment="Center"
                                          Margin="0,0,8,0"/>
                            <TextBlock Text="Auto-Refresh" 
                                       VerticalAlignment="Center" 
                                       Margin="0,0,12,0"
                                       FontSize="12"/>

                            <TextBlock Text="Interval:" 
                                       VerticalAlignment="Center" 
                                       Margin="0,0,6,0"
                                       FontSize="12"/>
                            <TextBox Text="{Binding RefreshIntervalSeconds, UpdateSourceTrigger=PropertyChanged}" 
                                     Width="50" 
                                     Height="24"
                                     VerticalAlignment="Center" 
                                     Margin="0,0,6,0"
                                     FontSize="12"
                                     materialDesign:HintAssist.Hint="sec"/>
                            <TextBlock Text="sec" 
                                       VerticalAlignment="Center"
                                       FontSize="12"
                                       Opacity="0.7"/>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </Grid>
        </materialDesign:Card>

        <!-- Main Content -->
        <materialDesign:Card Grid.Row="1" Style="{StaticResource DesktopCardStyle}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Table Header -->
                <Border Grid.Row="0" 
                        Background="{DynamicResource MaterialDesignToolBarBackground}" 
                        BorderBrush="{DynamicResource MaterialDesignDivider}"
                        BorderThickness="0,0,0,1"
                        Height="40">
                    <TextBlock Text="Batch Processes" 
                               Style="{DynamicResource MaterialDesignSubtitle1TextBlock}"
                               VerticalAlignment="Center"
                               Margin="20,0"
                               FontWeight="SemiBold"/>
                </Border>

                <!-- Batch List -->
                <DataGrid Grid.Row="1" 
                          ItemsSource="{Binding Batches}" 
                          SelectedItem="{Binding SelectedBatch}"
                          AutoGenerateColumns="False"
                          IsReadOnly="True"
                          Margin="0"
                          materialDesign:DataGridAssist.CellPadding="12,8"
                          materialDesign:DataGridAssist.ColumnHeaderPadding="12,8"
                          HeadersVisibility="Column"
                          GridLinesVisibility="Horizontal"
                          RowHeight="50"
                          FontSize="12"
                          AlternatingRowBackground="{DynamicResource MaterialDesignDivider}"
                          AlternationCount="2">

                    <DataGrid.Columns>
                        <!-- Status Column -->
                        <DataGridTemplateColumn Header="Status" Width="120" MinWidth="100">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Style="{StaticResource MaterialDesignFlatButton}"
                                            Background="{Binding StatusColor}"
                                            Padding="8,4"
                                            Margin="2"
                                            BorderThickness="0"
                                            Click="StatusButton_Click"
                                            Tag="{Binding}"
                                            ToolTip="Click to view detailed issues">
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="{Binding StatusIcon}" 
                                                                     Foreground="White" 
                                                                     Width="14" Height="14"
                                                                     VerticalAlignment="Center" 
                                                                     Margin="0,0,6,0"/>
                                            <TextBlock Text="{Binding StatusDisplayText}" 
                                                       Foreground="White" 
                                                       VerticalAlignment="Center" 
                                                       FontWeight="Medium"
                                                       FontSize="11"/>
                                        </StackPanel>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!-- Batch Details -->
                        <DataGridTemplateColumn Header="Batch Details" Width="220" MinWidth="200">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <TextBlock Text="{Binding Name}" 
                                                   FontWeight="SemiBold" 
                                                   FontSize="13"
                                                   Foreground="{DynamicResource MaterialDesignBody}"/>
                                        <TextBlock Text="{Binding BatchType}" 
                                                   FontSize="11"
                                                   Opacity="0.7"
                                                   Margin="0,2,0,0"/>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!-- Schedule Info -->
                        <DataGridTemplateColumn Header="Schedule" Width="150" MinWidth="130">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,2">
                                            <materialDesign:PackIcon Kind="Clock" Width="12" Height="12" VerticalAlignment="Center" Margin="0,0,4,0" Opacity="0.6"/>
                                            <TextBlock Text="Last: " FontSize="10" Opacity="0.7"/>
                                            <TextBlock Text="{Binding LastRun, StringFormat='{}{0:MM/dd HH:mm}'}" FontSize="10"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <materialDesign:PackIcon Kind="ClockOutline" Width="12" Height="12" VerticalAlignment="Center" Margin="0,0,4,0" Opacity="0.6"/>
                                            <TextBlock Text="Next: " FontSize="10" Opacity="0.7"/>
                                            <TextBlock Text="{Binding NextRun, StringFormat='{}{0:MM/dd HH:mm}'}" FontSize="10"/>
                                        </StackPanel>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!-- Scheduled Status -->
                        <DataGridTemplateColumn Header="Scheduled" Width="90" MinWidth="70">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <materialDesign:PackIcon VerticalAlignment="Center" 
                                                             HorizontalAlignment="Center" 
                                                             Width="18" Height="18">
                                        <materialDesign:PackIcon.Style>
                                            <Style TargetType="materialDesign:PackIcon">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsScheduled}" Value="True">
                                                        <Setter Property="Kind" Value="CheckCircle"/>
                                                        <Setter Property="Foreground" Value="#4CAF50"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsScheduled}" Value="False">
                                                        <Setter Property="Kind" Value="CloseCircle"/>
                                                        <Setter Property="Foreground" Value="#FF9800"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </materialDesign:PackIcon.Style>
                                    </materialDesign:PackIcon>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!-- Logs -->
                        <DataGridTemplateColumn Header="Logs" Width="90" MinWidth="60">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Style="{StaticResource LogsButton}" 
                                            Command="{Binding DataContext.ViewLogsCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                            CommandParameter="{Binding}"
                                            ToolTip="View Both Logs">
                                        <materialDesign:PackIcon Kind="FileMultiple" 
                                                                 Width="14" Height="14" 
                                                                 VerticalAlignment="Center"/>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!-- Config -->
                        <DataGridTemplateColumn Header="Config" Width="90" MinWidth="60">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Style="{StaticResource LogsButton}" 
                                            Command="{Binding DataContext.ViewConfigCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                            CommandParameter="{Binding}"
                                            ToolTip="View Config File">
                                        <materialDesign:PackIcon Kind="Cog" 
                                                                 Width="14" Height="14" 
                                                                 VerticalAlignment="Center"/>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!-- Actions -->
                        <DataGridTemplateColumn Header="Actions" Width="250" MinWidth="180">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <Button Style="{StaticResource CompactActionButton}" 
                                                Command="{Binding DataContext.ScheduleBatchCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                CommandParameter="{Binding}"
                                                Background="{DynamicResource PrimaryHueMidBrush}"
                                                Foreground="White"
                                                ToolTip="Schedule Batch"
                                                Margin="2,0">
                                            <StackPanel Orientation="Horizontal">
                                                <materialDesign:PackIcon Kind="Calendar" Width="12" Height="12" VerticalAlignment="Center" Margin="0,0,4,0"/>
                                                <TextBlock Text="Schedule" FontSize="10"/>
                                            </StackPanel>
                                        </Button>
                                        <Button Style="{StaticResource CompactActionButton}" 
                                                Command="{Binding DataContext.EditBatchCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                CommandParameter="{Binding}"
                                                Background="{DynamicResource PrimaryHueMidBrush}"
                                                Foreground="White"
                                                ToolTip="Edit Batch"
                                                Margin="2,0">
                                            <StackPanel Orientation="Horizontal">
                                                <materialDesign:PackIcon Kind="Pencil" Width="12" Height="12" VerticalAlignment="Center" Margin="0,0,4,0"/>
                                                <TextBlock Text="Edit" FontSize="10"/>
                                            </StackPanel>
                                        </Button>
                                        <Button Style="{StaticResource CompactActionButton1}" 
   FocusVisualStyle="{StaticResource RedFocusVisualStyle}"
                                                Command="{Binding DataContext.RemoveBatchCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                CommandParameter="{Binding}"
                                                Background="Red"
                                                Foreground="White"
                                                ToolTip="Remove Batch"
                                                Margin="2,0"
                                                Width="32">
                                            <materialDesign:PackIcon Kind="Delete" Width="12" Height="12"/>
                                        </Button>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>

                <!-- Loading Indicator -->
                <ProgressBar Grid.Row="1" 
                             IsIndeterminate="True" 
                             Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"
                             VerticalAlignment="Top"
                             Height="3"
                             Background="Transparent"
                             Foreground="{DynamicResource PrimaryHueMidBrush}"/>
            </Grid>
        </materialDesign:Card>

        <!-- Status Bar -->
        <materialDesign:Card Grid.Row="2" Style="{StaticResource DesktopCardStyle}">
            <Grid Height="44">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center" Margin="20,0">
                    <materialDesign:PackIcon Kind="Information" Width="16" Height="16" VerticalAlignment="Center" Margin="0,0,8,0" Opacity="0.6"/>
                    <TextBlock Text="{Binding StatusMessage}" 
                               VerticalAlignment="Center" 
                               FontSize="12"/>
                </StackPanel>

                <Border Grid.Column="1" 
                        Background="{DynamicResource PrimaryHueMidBrush}" 
                        CornerRadius="4" 
                        Padding="12,6" 
                        Margin="20,0">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="Database" Width="14" Height="14" VerticalAlignment="Center" Margin="0,0,6,0" Foreground="White"/>
                        <TextBlock Text="Total Batches: " VerticalAlignment="Center" Foreground="White" FontSize="12"/>
                        <TextBlock Text="{Binding Batches.Count}" FontWeight="SemiBold" VerticalAlignment="Center" Foreground="White" FontSize="12"/>
                    </StackPanel>
                </Border>
            </Grid>
        </materialDesign:Card>
    </Grid>
</Window>